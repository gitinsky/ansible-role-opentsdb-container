- name: create ext volume for configs
  file: state=directory path={{ ext_opentsdb_conf_volume }}

- name: create ext volume for logs
  file: state=directory path={{ ext_opentsdb_logs_volume }}

- name: create ext tmp volume
  file: state=directory path={{ ext_opentsdb_tmp_volume }}

- name: add localhost to /etc/hosts
  lineinfile: dest={{ ext_opentsdb_conf_volume }}/hosts regexp='.*localhost' line='127.0.0.1 localhost.localdomain localhost' create=yes

- name: add opentsdb-{{ ansible_hostname }} to /etc/hosts
  lineinfile: dest={{ ext_opentsdb_conf_volume }}/hosts regexp='.*localhost' line='127.0.0.1 opentsdb-{{ ansible_hostname }}' create=yes

- name: put OpenTSDB config
  template: src=opentsdb.conf dest={{ ext_opentsdb_conf_volume }}/opentsdb.conf
  register: config

- name: start an opentsdb container
  docker:
    image: gitinsky/opentsdb:0.1.5
    state: "{{ 'restarted' if config.changed else 'reloaded' }}"
    hostname: "opentsdb-{{ ansible_hostname }}"
    dns:
      - "{{ docker_dns_1 }}"
      - "{{ docker_dns_2 }}"
    expose:
      - "{{ opentsdb_port }}"
    ports:
        - "{{ opentsdb_port }}:{{ opentsdb_port }}"
    volumes:
      - "{{ ext_opentsdb_conf_volume }}:/etc/opentsdb"
      - "{{ ext_opentsdb_logs_volume }}:/var/log/opentsdb"
      - "{{ ext_opentsdb_tmp_volume }}:/tmp"
    name: opentsdb
    restart_policy: always
  tags:
    - docker


# command: docker run
#  -d
#  -h opentsdb-{{ ansible_hostname }}
#  --dns {{ ansible_docker0.ipv4.address }}
#  --dns 8.8.8.8
#  --dns-search node.dc1.consul
#  --read-only=true
#  -p={{ opentsdb_port }}:{{ opentsdb_port }}
#  -v {{ ext_opentsdb_conf_volume }}:/etc/opentsdb
#  -v {{ ext_opentsdb_logs_volume }}:/var/log/opentsdb
#  -v {{ ext_opentsdb_tmp_volume }}:/tmp
#  -name opentsdb gitinsky/opentsdb:0.1.3
